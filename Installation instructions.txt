djmaus installation notes

Should work on mac, linux, windows.

1. Install matlab.
2. Install psych toolbox. Download from www.psychtoolbox.org 
    -if psychtoolbox is already downloaded, you can just run SetupPsychtoolbox
3. Download djmaus from https://github.com/wehr-lab/djmaus and put anywhere. Add that folder to matlab path (with subfolders).
	-Pro tip: if you expect to do any code development, clone it instead (using the github desktop or command-line). Then you can commit changes.
	-to clone from the command line, use:
		git clone https://github.com/wehr-lab/djmaus.git
	-to commit with github desktop: click "changes" tab at top, review which checked files you want to commit, 
		add summary (required) and details (optional), click "commit to master", and then click sync in upper right corner.
4. Copy djPrefs-template.m to djPrefs.m, and then edit djPrefs.m to reflect any specifics of your machine and paths. 
    It might work out of the box, but you might want to edit the zmqurl if you are using a different computer for 
    open-ephys data acquisition, for example. If you have user-specific prefs they go under individual users at bottom.
5. Install Open Ephys GUI. Download from http://www.open-ephys.org/gui/
	to use Network Events you need to build from source code, 
	which is described here: https://open-ephys.atlassian.net/wiki/display/OEW/Installation
6. Install zeroMQ. Download from http://zeromq.org/intro:get-the-software 
	Using package managers is much better:
	linux:
		sudo add-apt-repository ppa:chris-lea/zeromq
		sudo apt-get update
		sudo apt-get install libzmq3-dbg libzmq3-dev libzmq3
	mac: 
		install macports from www.macports.org/install.php
		relaunch your terminal
		sudo port install zmq3
    win: 	Seems to work without explicitly installing zeromq, but if you need to, here is the link:
		http://miru.hk/archive/ZeroMQ-4.0.4~miru1.0-x64.exe

7. If the zeroMQwrapper mex file doesn't work (check with test_zeroMQ_wrapper.m), you might need to compile the mex from source code. 
	Make sure g++ 4.7 is installed:
		linux:
			sudo apt-get install g++-4.7
			sudo ln -s /usr/bin/g++-4.7 /usr/bin/g++ 
		mac:
	Download the open-ephys source code from https://github.com/open-ephys/GUI
	Edit GUI/Resources/matlab/compile_matlab_wrapper.m to have the right paths to your OE install, and then run it. Test by running test_zeroMQ_wrapper

That's it. 

More notes:
If launch the open-ephys GUI and network events source doesn't show, try this:
linux:
	sudo add-apt-repository ppa:chris-lea/zeromq
	sudo apt-get update
	sudo apt-get install libzmq3-dbg libzmq3-dev libzmq3
	(from https://open-ephys.atlassian.net/wiki/display/OEW/Linux)
mac: build open-ephys from source as described here: https://open-ephys.atlassian.net/wiki/display/OEW/Mac+OS+X 
Network Events documentation: https://open-ephys.atlassian.net/wiki/display/OEW/Network+Events 

the python network console might be helpful for development
it requires 
apt-get install python-zmq

more notes:
network events breaks open-ephys data acquisition on mac. Recording works fine until the network events source is added. Stuck there.
trying to get it running on windows
Network events already works in the downloadable binary, so no need to recompile the plugin-gui just yet.
Need to compile the zmq wrapper, though, and the code I added to the cpp file (for changing directory and writing it to file to cmmunicate with djmaus) doesn't work with the visual studio compiler (even though it works with xcode and g++). So, g++...
trying a windows version of g++, MinGW-w64 version 4.9.2 compiler from TDM-GCC, tdm64-gcc-4.9.2.exe from: https://sourceforge.net/projects/tdm-gcc/files/TDM-GCC%20Installer/Previous/1.1309.0/
instructions at http://www.mathworks.com/help/matlab/matlab_external/install-mingw-support-package.html say to install directly in c:\ and to uncheck "check for updates." Use the add-ons menu in matlab
-actually, we do need to recompile the plugins even in windows. And as of Aug2016, you need to do the following
workarounds: (1) make sure the 2 channels in Network Events are set to not record, and (2) right-click the merger
and deselect both check marks for NE but leave both checked for RhythmFPGA. I also have param turned off for both NE chans.

troubleshooting: 
-If you launch OE and get "audio device initialization error," try plugging in some speakers or headphones into the audio out jack on your computer.
-If you stop acquisition (the "play" button), you need to start it again before clicking record, otherwise OE will not save data files. Relaunch OE to fix.
-Works with both x64 Release and 32bit Debug versions of OE.

Here's a wierd issue that I will contact open-ephys about. I was getting info.ts that were spaced less than info.nsamples apart. 
This made the interpolated timestamps double back on themselves (sawtooth pattern). As a result all the timing (TTLs, stimuli) 
were completely messed up. Changing the recording node from bandpass filter to rhythmFPGA fixed it (now unique(info.ts)==1024),
 but the timestamps for AUX and ADC channels are still messed up. FOrtunately we can use the data timestamps for now.

if you're using open-ephys and djmaus on different computers, be sure to turn sharing on for the data drive on 
the open-ephys computer, and change the permissions to full. Right click on D:, properties, sharing.

-On Windows, if you get 'v140 tools not installed' error in Visual Studio: right click open-ephys project - Properties - General - in building tools scroll bar select v140 tools that are installed. 

-if you are using two computers, one to record with OE and another one to manage stimuli with djmaus, you will need to allow djmaus make changes on OE computer.
to do that: go to your OE computer -> this PC, right click on the drive where the data s stored -> properties -> sharing -> advanced sharing , the drive should be selected, you click Add, give it a name, click OK. 
default sharing is set to read only, so in Advanced Sharing go to Permissions and check Full Control or Change. 
